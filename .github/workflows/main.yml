name: CI

on: [push, workflow_dispatch]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Download
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
    - name: Extract
      run: Expand-Archive ngrok.zip
    - name: Auth
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
    - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
    - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
    - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
    - name: Creating Tunnel
      id: ngrok_tunnel
      run: |
        $tunnel_output = .\ngrok\ngrok.exe tcp 3389
        $tunnel_output | Out-File -FilePath ngrok_tunnel.txt
        $tunnel_url = $tunnel_output -replace '\s+', ' ' | Select-String -Pattern 'tcp://.*\.ngrok.io:\d+' -AllMatches | ForEach-Object { $_.Matches } | ForEach-Object { $_.Value }
        Write-Output "::set-output name=tunnel_url::$tunnel_url"
    - name: Pass Tunnel URL to Next Step
      run: echo "Tunnel URL is ${{ steps.ngrok_tunnel.outputs.tunnel_url }}"
